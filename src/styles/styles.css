
@import url("https://fonts.googleapis.com/css2?family=Julius+Sans+One&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Jost:wght@300;400&family=Julius+Sans+One&display=swap");
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  -webkit-text-decoration:underline;
  text-decoration:underline;
  text-decoration:underline;
  -webkit-text-decoration:underline dotted;
          text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}
sub{
  bottom:-0.25em;
}
sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type="button"],
[type="reset"],
[type="submit"]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type="checkbox"],
[type="radio"]{
  box-sizing:border-box;
  padding:0;
}
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button{
  height:auto;
}
[type="search"]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type="search"]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}
h1,
h2,
h3,
h4,
h5,
h6{
  font-family:"Julius Sans One";
  color:#693513;
}
p{
  font-family:"Jost";
  color:#4a4a4a;
  font-weight:300;
}
.clearfix:after{
  content:"";
  clear:both;
  display:table;
}
.container{
  max-width:1140px;
  margin:0 auto;
}
.wrapper{
  padding:0 3rem;
}
p{
  font-size:1.4rem;
  line-height:1.6em;
  text-transform:uppercase;
}
h1{
  font-size:3em;
}
.btn{
  padding:1em 2em;
  font-family:"Jost";
  font-size:1.2em;
  font-weight:bold;
  border:none;
}
.btn-brown{
  color:#fff;
  border-radius:30px;
  background:#693513;
}
section{
  padding:30px 0;
}
section.p-t-0{
  padding-top:0px;
}
header h1{
  display:block;
  text-align:center;
  padding:1.5rem 0;
  position:relative;
}
header h1:after{
    content:"";
    position:absolute;
    bottom:0;
    left:50%;
    transform:translatex(-50%);
    width:300px;
    height:2px;
    background:#693513;
  }
header .nav-brand img{
      max-width:180px;
    }
nav{
}
.gallery-inner{
  display:grid;
  grid-template-columns:auto auto;
}
.gallery-inner .gallery-card{
    margin:20px;
  }
.gallery-featured{
  background:#f5f5f5;
}
.gallery-card{
  position:relative;
  overflow:hidden;
}
.gallery-card a{
    display:block;
    -webkit-text-decoration:none;
    text-decoration:none;
    color:#4a4a4a;
    font-family:"Jost";
    font-weight:300;
  }
.gallery-card img{
    display:block;
    width:100%;
  }
.gallery-card figcaption{
    width:100%;
    font-size:1.6rem;
    padding:20px 0;
    text-align:center;
  }

/*# sourceMappingURL=data:application/json;base64, */